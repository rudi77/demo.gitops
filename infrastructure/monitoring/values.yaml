# based on https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
kube-prometheus-stack:
  enabled: true
  prometheus:
    prometheusSpec:
      # monitor PodMonitors / ServiceMonitors in all namespaces
      podMonitorSelectorNilUsesHelmValues: false
      podMonitorSelector: { }
      podMonitorNamespaceSelector: { }
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector: { }
      serviceMonitorNamespaceSelector: { }
      ## Prometheus StorageSpec for persistent data
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 2Gi

  grafana:
    adminPassword: admin  # change!
    plugins:
      - grafana-piechart-panel
      - camptocamp-prometheus-alertmanager-datasource # v.1.0.0
    sidecar:
      datasources:
        enabled: true
    additionalDataSources:
      - name: "Prometheus Alertmanager"
        type: "camptocamp-prometheus-alertmanager-datasource"
        access: "proxy"
        url: "http://monitoring-kube-prometheus-alertmanager:9093"
        basicAuth: false
        jsonData:
          severity_critical: "critical"
          severity_high: "high"
          severity_warning: "warning"
          severity_info: "info"

  kubeControllerManager:
    enabled: false

  kubeScheduler:
    enabled: false

  kubeProxy:
    enabled: false

  prometheusOperator:
    logLevel: debug

  defaultRules:
    rules:
      general: false
      prometheusOperator: false

  additionalPrometheusRulesMap:
    infrastructure:
      groups:
        - name: custom-infra.rules
          rules:
            - alert: TargetDown
              annotations:
                message: '{{`{{`}} $value {{`}}`}}% of the {{`{{`}} $labels.job {{`}}`}} targets are down.'
              expr: up == 0
              for: 20m
              labels:
                severity: warning
Values:
# based on https://github.com/grafana/helm-charts/blob/main/charts/loki-stack/values.yaml
loki-stack:
  enabled: true
  loki:
    persistence:
      enabled: true
      storageClassName: standard
      size: 2Gi
    config:
      chunk_store_config:
        max_look_back_period: 90d
      table_manager:
        retention_deletes_enabled: true
        retention_period: 90d
  promtail:
    enabled: true

    # enable syslog server
    syslogService:
      enabled: true
      type: NodePort
      port: 1514
    extraScrapeConfigs:
      - job_name: syslog
        syslog:
          listen_address: 0.0.0.0:1514
          labels:
            job: "syslog"
        relabel_configs:
          - source_labels: [ '__syslog_message_hostname' ]
            target_label: 'host'
  grafana:
    sidecar:
      datasources:
        enabled: true

# based on https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-blackbox-exporter/values.yaml
prometheus-blackbox-exporter:
  serviceMonitor:
    enabled: true
    targets:
      - name: website
        url: https://www.blumatix-consulting.at
  config:
    modules:
      http_2xx:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: [ "HTTP/1.1", "HTTP/2.0" ]
          no_follow_redirects: false
          preferred_ip_protocol: "ip4"

externalMetrics: { }

prometheus-msteams:
  enabled: false
  metrics:
    serviceMonitor:
      enabled: true
  connectors:
    # in alertmanager, this will be used as http://prometheus-msteams:2000/main
    - main: "https://________________.webhook.office.com/webhookb2_____________"

# based on https://github.com/NVIDIA/gpu-monitoring-tools/blob/master/deployment/dcgm-exporter/values.yaml
dcgm-exporter:
  enabled: false